<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="web.sontan.dao.ReplyDao">
  <resultMap id="replyMap" type="reply">
    <id property="replyId" column="reply_id"/>
    <result property="replyContent" column="reply_content"/>
    <result property="replyStatus" column="reply_status"/>
    <result property="replyTime" column="reply_time"/>

    <association property="user" resultMap="web.sontan.dao.UserDao.userMap"/>
    <association property="post" resultMap="web.sontan.dao.PostDao.postMap"/>

    <association property="previous" resultMap="replyMap"/>
  </resultMap>

  <insert id="addReply">
    INSERT INTO xy_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      reply_id,
      reply_content,
      <if test="reply.replyTime != null">
        reply_time,
      </if>
      <if test="reply.replyStatus != null">
        reply_status,
      </if>
      user_id,
      post_id,
      <if test="reply.previous.replyId != null">
        previous_id,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      #{reply.replyId},
      #{reply.replyContent},
      <if test="reply.replyTime != null">
        #{reply.replyTime},
      </if>
      <if test="reply.replyStatus != null">
        #{reply.replyStatus},
      </if>
      #{reply.user.userId},
      #{reply.post.postId},
      <if test="reply.previous.replyId != null">
        #{reply.previous.replyId},
      </if>
    </trim>
  </insert>

  <update id="updateReply">
    UPDATE xy_reply
    <set>
      <if test="reply.replyContent != null">
        reply_content=#{reply.replyContent},
      </if>
      <if test="reply.replyTime != null">
        reply_time=#{reply.replyTime},
      </if>
      <if test="reply.replyStatus != null">
        reply_status=#{reply.replyStatus},
      </if>
      WHERE reply_id=#{reply.replyId}
    </set>
  </update>

  <select id="findByPostId" resultMap="replyMap">
    SELECT this.*,pre.*,thisU.user_name,thisU.user_avatar,preU.user_name,preU.user_avatar FROM xy_reply this LEFT JOIN xy_reply pre ON pre.reply_id=this.previous_id LEFT JOIN xy_user thisU ON thisU.user_id=this.user_id LEFT JOIN xy_user preU ON preU.user_id=pre.user_id WHERE (pre.reply_status IS NULL OR pre.reply_status!=2) AND this.post_id=#{postId} AND this.reply_status!=2 ORDER BY this.reply_time ASC
  </select>

</mapper>
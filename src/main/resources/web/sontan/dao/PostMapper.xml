<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="web.sontan.dao.PostDao">
  <resultMap id="postMap" type="post">
    <id property="postId" column="post_id"/>
    <result property="postContent" column="post_content"/>
    <result property="postTitle" column="post_title"/>
    <result property="postStatus" column="post_status"/>
    <result property="postType" column="post_type"/>
    <result property="createTime" column="create_time"/>

    <association property="user" resultMap="web.sontan.dao.UserDao.userMap"/><!--多对一外键-->
  </resultMap>

  <resultMap id="postVoMap" type="postvo" extends="postMap">
    <collection property="replies" ofType="reply" column="post_id"
                select="web.sontan.dao.ReplyDao.findByPostId"/> <!--column="post_id" select="web.sontan.dao.ReplyDao.findByPostId"-->
  </resultMap>

  <insert id="addPost">
    INSERT INTO xy_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      post_id,
      post_content,
      post_title,
      <if test="post.postStatus != null">
        post_status,
      </if>
      <if test="post.postType != null">
        post_type,
      </if>
      <if test="post.createTime != null">
        create_time,
      </if>
      user_id,
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      #{post.postId},
      #{post.postContent},
      #{post.postTitle},
      <if test="post.postStatus != null">
        #{post.postStatus},
      </if>
      <if test="post.postType != null">
        #{post.postType},
      </if>
      <if test="post.createTime != null">
        #{post.createTime},
      </if>
      #{post.user.userId},
    </trim>
  </insert>

  <update id="updatePost">
    UPDATE xy_post
    <set>
      <if test="post.postType != null">
        post_type = #{post.postType},
      </if>
      <if test="post.postTitle != null">
        post_title = #{post.postTitle},
      </if>
      <if test="post.postContent != null">
        post_content = #{post.postContent},
      </if>
      <if test="post.postStatus != null">
        post_status = #{post.postStatus},
      </if>
    </set>
    WHERE post_id=#{post.postId}
  </update>

  <select id="findById" resultMap="postVoMap">
    SELECT p.*, u.user_id, u.user_avatar, u.user_name FROM xy_post p LEFT JOIN xy_user u ON p.user_id = u.user_id WHERE post_id=#{postId} AND post_status!=2
  </select>

  <select id="findAll" resultMap="postMap">
    SELECT p.*, u.user_id, u.user_avatar, u.user_name FROM xy_post p LEFT JOIN xy_user u ON p.user_id=u.user_id WHERE post_status!=2 ORDER BY p.create_time ${orderType}
  </select>

  <select id="findByString" resultMap="postMap">
    <bind name="pattern" value="'%' + query + '%'"/>
    SELECT p.*, u.user_id, u.user_avatar, u.user_name FROM xy_post p LEFT JOIN xy_user u ON p.user_id=u.user_id WHERE post_status!=2 AND p.post_title LIKE #{pattern} ORDER BY p.create_time ${orderType}
  </select>

  <select id="findByUserId" resultMap="postMap">
    SELECT p.post_id, p.post_title, p.post_content FROM xy_post p LEFT JOIN xy_user u ON p.user_id=u.user_id WHERE p.post_status!=2 AND u.user_id=#{userId} ORDER BY p.create_time ${orderType}
  </select>

</mapper>